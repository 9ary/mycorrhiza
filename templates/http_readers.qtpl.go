// Code generated by qtc from "http_readers.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line templates/http_readers.qtpl:1
package templates

//line templates/http_readers.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/http_readers.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/http_readers.qtpl:1
func StreamHistoryHTML(qw422016 *qt422016.Writer, hyphaName, tbody string) {
//line templates/http_readers.qtpl:1
	qw422016.N().S(`
<main>
`)
//line templates/http_readers.qtpl:3
	streamnavHTML(qw422016, hyphaName, "history")
//line templates/http_readers.qtpl:3
	qw422016.N().S(`
	<table>
		<thead>
			<tr>
				<th>Time</th>
				<th>Hash</th>
				<th>Message</th>
			</tr>
		</thead>
		<tbody>
		`)
//line templates/http_readers.qtpl:13
	qw422016.N().S(tbody)
//line templates/http_readers.qtpl:13
	qw422016.N().S(`
		</tbody>
	</table>
</main>
`)
//line templates/http_readers.qtpl:17
}

//line templates/http_readers.qtpl:17
func WriteHistoryHTML(qq422016 qtio422016.Writer, hyphaName, tbody string) {
//line templates/http_readers.qtpl:17
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/http_readers.qtpl:17
	StreamHistoryHTML(qw422016, hyphaName, tbody)
//line templates/http_readers.qtpl:17
	qt422016.ReleaseWriter(qw422016)
//line templates/http_readers.qtpl:17
}

//line templates/http_readers.qtpl:17
func HistoryHTML(hyphaName, tbody string) string {
//line templates/http_readers.qtpl:17
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/http_readers.qtpl:17
	WriteHistoryHTML(qb422016, hyphaName, tbody)
//line templates/http_readers.qtpl:17
	qs422016 := string(qb422016.B)
//line templates/http_readers.qtpl:17
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/http_readers.qtpl:17
	return qs422016
//line templates/http_readers.qtpl:17
}

//line templates/http_readers.qtpl:19
func StreamRevisionHTML(qw422016 *qt422016.Writer, hyphaName, naviTitle, contents, tree, revHash string) {
//line templates/http_readers.qtpl:19
	qw422016.N().S(`
<main>
`)
//line templates/http_readers.qtpl:21
	streamnavHTML(qw422016, hyphaName, "revision", revHash)
//line templates/http_readers.qtpl:21
	qw422016.N().S(`
	<article>
		<p>Please note that viewing binary parts of hyphae is not supported in history for now.</p>
		`)
//line templates/http_readers.qtpl:24
	qw422016.N().S(naviTitle)
//line templates/http_readers.qtpl:24
	qw422016.N().S(`
		`)
//line templates/http_readers.qtpl:25
	qw422016.N().S(contents)
//line templates/http_readers.qtpl:25
	qw422016.N().S(`
	</article>
	<hr/>
	<aside>
		`)
//line templates/http_readers.qtpl:29
	qw422016.N().S(tree)
//line templates/http_readers.qtpl:29
	qw422016.N().S(`
	</aside>
</main>
`)
//line templates/http_readers.qtpl:32
}

//line templates/http_readers.qtpl:32
func WriteRevisionHTML(qq422016 qtio422016.Writer, hyphaName, naviTitle, contents, tree, revHash string) {
//line templates/http_readers.qtpl:32
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/http_readers.qtpl:32
	StreamRevisionHTML(qw422016, hyphaName, naviTitle, contents, tree, revHash)
//line templates/http_readers.qtpl:32
	qt422016.ReleaseWriter(qw422016)
//line templates/http_readers.qtpl:32
}

//line templates/http_readers.qtpl:32
func RevisionHTML(hyphaName, naviTitle, contents, tree, revHash string) string {
//line templates/http_readers.qtpl:32
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/http_readers.qtpl:32
	WriteRevisionHTML(qb422016, hyphaName, naviTitle, contents, tree, revHash)
//line templates/http_readers.qtpl:32
	qs422016 := string(qb422016.B)
//line templates/http_readers.qtpl:32
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/http_readers.qtpl:32
	return qs422016
//line templates/http_readers.qtpl:32
}

// If `contents` == "", a helpful message is shown instead.

//line templates/http_readers.qtpl:35
func StreamPageHTML(qw422016 *qt422016.Writer, hyphaName, naviTitle, contents, tree string) {
//line templates/http_readers.qtpl:35
	qw422016.N().S(`
<main>
`)
//line templates/http_readers.qtpl:37
	streamnavHTML(qw422016, hyphaName, "page")
//line templates/http_readers.qtpl:37
	qw422016.N().S(`
	<article>
		`)
//line templates/http_readers.qtpl:39
	qw422016.N().S(naviTitle)
//line templates/http_readers.qtpl:39
	qw422016.N().S(`
		`)
//line templates/http_readers.qtpl:40
	if contents == "" {
//line templates/http_readers.qtpl:40
		qw422016.N().S(`
			<p>This hypha has no text. Why not <a href="/edit/`)
//line templates/http_readers.qtpl:41
		qw422016.E().S(hyphaName)
//line templates/http_readers.qtpl:41
		qw422016.N().S(`">create it</a>?</p>
		`)
//line templates/http_readers.qtpl:42
	} else {
//line templates/http_readers.qtpl:42
		qw422016.N().S(`
			`)
//line templates/http_readers.qtpl:43
		qw422016.N().S(contents)
//line templates/http_readers.qtpl:43
		qw422016.N().S(`
		`)
//line templates/http_readers.qtpl:44
	}
//line templates/http_readers.qtpl:44
	qw422016.N().S(`
	</article>
	<hr/>
	<form action="/upload-binary/`)
//line templates/http_readers.qtpl:47
	qw422016.E().S(hyphaName)
//line templates/http_readers.qtpl:47
	qw422016.N().S(`"
			method="post" enctype="multipart/form-data">
		<label for="upload-binary__input">Upload new binary part</label>
		<br>
		<input type="file" id="upload-binary__input" name="binary"/>
		<input type="submit"/>
	</form>
	<hr/>
	<aside>
		`)
//line templates/http_readers.qtpl:56
	qw422016.N().S(tree)
//line templates/http_readers.qtpl:56
	qw422016.N().S(`
	</aside>
</main>
`)
//line templates/http_readers.qtpl:59
}

//line templates/http_readers.qtpl:59
func WritePageHTML(qq422016 qtio422016.Writer, hyphaName, naviTitle, contents, tree string) {
//line templates/http_readers.qtpl:59
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/http_readers.qtpl:59
	StreamPageHTML(qw422016, hyphaName, naviTitle, contents, tree)
//line templates/http_readers.qtpl:59
	qt422016.ReleaseWriter(qw422016)
//line templates/http_readers.qtpl:59
}

//line templates/http_readers.qtpl:59
func PageHTML(hyphaName, naviTitle, contents, tree string) string {
//line templates/http_readers.qtpl:59
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/http_readers.qtpl:59
	WritePageHTML(qb422016, hyphaName, naviTitle, contents, tree)
//line templates/http_readers.qtpl:59
	qs422016 := string(qb422016.B)
//line templates/http_readers.qtpl:59
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/http_readers.qtpl:59
	return qs422016
//line templates/http_readers.qtpl:59
}
