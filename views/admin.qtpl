{% import "github.com/bouncepaw/mycorrhiza/cfg" %}
{% import "github.com/bouncepaw/mycorrhiza/user" %}
{% import "github.com/bouncepaw/mycorrhiza/util" %}

{% func AdminPanelHTML() %}
<div class="layout">
<main class="main-width">
	<h1>Administrative functions</h1>
	<section>
		<h2>Safe things</h2>
		<ul>
			<li><a href="/about">About this wiki</a></li>
			<li><a href="/user-list">User list</a></li>
			<li><a href="/update-header-links">Update header links</a></li>
			<li><a href="/admin/users/">Manage users</a></li>
		</ul>
	</section>
	<section>
		<h2>Dangerous things</h2>
		<form action="/admin/shutdown" method="POST" style="float:left">
			<fieldset>
				<legend>Shutdown wiki</legend>
				<input type="submit" class="btn">
			</fieldset>
		</form>
		<form action="/reindex" method="GET" style="float:left">
			<fieldset>
				<legend>Reindex hyphae</legend>
				<input type="submit" class="btn">
			</fieldset>
		</form>
	</section>
</main>
</div>
{% endfunc %}

{% func AdminUsersPanelHTML(userList []*user.User) %}
<div class="layout">
<main class="main-width">
	<h1>Manage users</h1>

	<form action="/admin/reindex-users" method="post">
		<a class="btn" href="/admin/user/new">Create a new user</a>
		<button class="btn" type="submit">Reindex users</button>
	</form>

	<br>

	<table class="users-table">
	<thead>
		<tr>
			<th>Name</th>
			<th>Group</th>
			<th>Registered at</th>
			<th aria-label="Actions"></th>
		</tr>
	</thead>
	<tbody>
	{% for _, u := range userList %}
		<tr>
			<td class="table-cell--fill">
				<a href="/hypha/{%u cfg.UserHypha %}/{%u u.Name %}">{%s u.Name %}</a>
			</td>
			<td>{%s u.Group %}</td>
			<td>
				{% if u.RegisteredAt.IsZero() %}
					unknown
				{% else %}
					{%s u.RegisteredAt.UTC().Format("2006-01-02 15:04") %}
				{% endif %}
			</td>
			<td>
				<a href="/admin/users/{%u u.Name %}/edit">Edit</a>
			</td>
		</tr>
	{% endfor %}
	</tbody>
	</table>
</main>
</div>
{% endfunc %}

{% func AdminUserNewHTML(f util.FormData) %}
<div class="layout">
<main class="main-width form-wrap">
	<h1>New user</h1>

	{% if f.HasError() %}
	<div class="notice notice--error">
		<strong>Error:</strong>
		{%s f.Error() %}
	</div>
	{% endif %}

	<form class="form--double" action="" method="post">
		<div class="form-field">
			<label for="name">Name:</label>
			<input type="text" name="name" id="name" value="{%s f.Get("name") %}" autofocus>
		</div>

		<div class="form-field">
			<label for="password">Password:</label>
			<input type="password" name="password" id="password" value="{%s f.Get("password") %}">
		</div>

		<div class="form-field">
			<label for="group">Group:</label>
			<select id="group" name="group">
				<option{% if f.Get("group") == "anon" %} selected{% endif %}>anon</option>
				<option{% if f.Get("group") == "editor" %} selected{% endif %}>editor</option>
				<option{% if f.Get("group") == "trusted" %} selected{% endif %}>trusted</option>
				<option{% if f.Get("group") == "moderator" %} selected{% endif %}>moderator</option>
				<option{% if f.Get("group") == "admin" %} selected{% endif %}>admin</option>
			</select>
		</div>

		<div class="form-field">
			<div class="form-field__input">
				<button class="btn" type="submit">Create</button>
				<a class="btn btn_weak" href="/admin/users/">Cancel</a>
			</div>
		</div>
	</form>
</main>
</div>
{% endfunc %}

{% func AdminUserEditHTML(u *user.User, f util.FormData) %}
<div class="layout">
<main class="main-width form-wrap">
	<h1>
		<a href="/admin/users/">&larr;</a>
		{%s u.Name %}
	</h1>

	<h2>Change group</h2>

	{% if f.HasError() %}
	<div class="notice notice--error">
		<strong>Error:</strong>
		{%s f.Error() %}
	</div>
	{% endif %}

	<form action="" method="post">
		<div class="form-field">
			<select id="group" name="group" aria-label="Group">
				<option{% if f.Get("group") == "anon" %} selected{% endif %}>anon</option>
				<option{% if f.Get("group") == "editor" %} selected{% endif %}>editor</option>
				<option{% if f.Get("group") == "trusted" %} selected{% endif %}>trusted</option>
				<option{% if f.Get("group") == "moderator" %} selected{% endif %}>moderator</option>
				<option{% if f.Get("group") == "admin" %} selected{% endif %}>admin</option>
			</select>
		</div>

		<div class="form-field">
			<button class="btn" type="submit">Update</button>
		</div>
	</form>

	<h2>Delete user</h2>
	<p>Remove the user from the database. Changes made by the user will
	be preserved. It will be possible to take this username later.</p>
	<a class="btn btn_destructive" href="/admin/users/{%u u.Name %}/delete">Delete</a>
</main>
</div>
{% endfunc %}

{% func AdminUserDeleteHTML(u *user.User, f util.FormData) %}
<div class="layout">
<main class="main-width form-wrap">
	<h1>Delete user</h1>

	{% if f.HasError() %}
	<div class="notice notice--error">
		<strong>Error:</strong>
		{%s f.Error() %}
	</div>
	{% endif %}

	<p>Are you sure you want to delete <strong>{%s u.Name %}</strong>
	from the database? This action is irreversible.</p>

	<form action="" method="post">
		<button class="btn btn_destructive" type="submit">Delete</button>
		<a class="btn btn_weak" href="/admin/users/{%u u.Name %}/edit">Cancel</a>
	</form>
</main>
</div>
{% endfunc %}
