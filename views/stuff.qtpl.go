// Code generated by qtc from "stuff.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/stuff.qtpl:1
package views

//line views/stuff.qtpl:1
import "path/filepath"

//line views/stuff.qtpl:2
import "github.com/bouncepaw/mycorrhiza/cfg"

//line views/stuff.qtpl:3
import "github.com/bouncepaw/mycorrhiza/hyphae"

//line views/stuff.qtpl:4
import "github.com/bouncepaw/mycorrhiza/user"

//line views/stuff.qtpl:5
import "github.com/bouncepaw/mycorrhiza/util"

//line views/stuff.qtpl:7
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/stuff.qtpl:7
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/stuff.qtpl:7
func StreamBaseHTML(qw422016 *qt422016.Writer, title, body string, u *user.User, headElements ...string) {
//line views/stuff.qtpl:7
	qw422016.N().S(`
<!doctype html>
<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>`)
//line views/stuff.qtpl:13
	qw422016.E().S(title)
//line views/stuff.qtpl:13
	qw422016.N().S(`</title>
		<link rel="shortcut icon" href="/static/favicon.ico">
		<link rel="stylesheet" href="/static/style.css">
		<script src="/static/shortcuts.js"></script>
		`)
//line views/stuff.qtpl:17
	for _, el := range headElements {
//line views/stuff.qtpl:17
		qw422016.N().S(el)
//line views/stuff.qtpl:17
	}
//line views/stuff.qtpl:17
	qw422016.N().S(`
	</head>
	<body>
		<header>
			<nav class="header-links main-width">
				<ul class="header-links__list">
`)
//line views/stuff.qtpl:23
	for _, link := range cfg.HeaderLinks {
//line views/stuff.qtpl:23
		qw422016.N().S(`					<li class="header-links__entry"><a class="header-links__link" href="`)
//line views/stuff.qtpl:24
		qw422016.E().S(link.Href)
//line views/stuff.qtpl:24
		qw422016.N().S(`">`)
//line views/stuff.qtpl:24
		qw422016.E().S(link.Display)
//line views/stuff.qtpl:24
		qw422016.N().S(`</a></li>
`)
//line views/stuff.qtpl:25
	}
//line views/stuff.qtpl:25
	qw422016.N().S(`					`)
//line views/stuff.qtpl:26
	qw422016.N().S(UserMenuHTML(u))
//line views/stuff.qtpl:26
	qw422016.N().S(`
				</ul>
			</nav>
		</header>
		`)
//line views/stuff.qtpl:30
	qw422016.N().S(body)
//line views/stuff.qtpl:30
	qw422016.N().S(`
		<template id="dialog-template">
			<div class="dialog-wrap">
				<div class="dialog" tabindex="0">
					<div class="dialog__header">
						<h1 class="dialog__title"></h1>
						<button class="dialog__close-button" aria-label="Close this dialog"></button>
					</div>

					<div class="dialog__content"></div>
				</div>
			</div>
		</template>
		`)
//line views/stuff.qtpl:43
	streamomnipresentScripts(qw422016)
//line views/stuff.qtpl:43
	qw422016.N().S(`
	</body>
</html>
`)
//line views/stuff.qtpl:46
}

//line views/stuff.qtpl:46
func WriteBaseHTML(qq422016 qtio422016.Writer, title, body string, u *user.User, headElements ...string) {
//line views/stuff.qtpl:46
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/stuff.qtpl:46
	StreamBaseHTML(qw422016, title, body, u, headElements...)
//line views/stuff.qtpl:46
	qt422016.ReleaseWriter(qw422016)
//line views/stuff.qtpl:46
}

//line views/stuff.qtpl:46
func BaseHTML(title, body string, u *user.User, headElements ...string) string {
//line views/stuff.qtpl:46
	qb422016 := qt422016.AcquireByteBuffer()
//line views/stuff.qtpl:46
	WriteBaseHTML(qb422016, title, body, u, headElements...)
//line views/stuff.qtpl:46
	qs422016 := string(qb422016.B)
//line views/stuff.qtpl:46
	qt422016.ReleaseByteBuffer(qb422016)
//line views/stuff.qtpl:46
	return qs422016
//line views/stuff.qtpl:46
}

//line views/stuff.qtpl:48
func StreamUserListHTML(qw422016 *qt422016.Writer) {
//line views/stuff.qtpl:48
	qw422016.N().S(`
<div class="layout">
<main class="main-width user-list">
	<h1>List of users</h1>
`)
//line views/stuff.qtpl:53
	var (
		admins     = make([]string, 0)
		moderators = make([]string, 0)
		editors    = make([]string, 0)
	)
	for u := range user.YieldUsers() {
		switch u.Group {
		case "admin":
			admins = append(admins, u.Name)
		case "moderator":
			moderators = append(moderators, u.Name)
		case "editor", "trusted":
			editors = append(editors, u.Name)
		}
	}

//line views/stuff.qtpl:68
	qw422016.N().S(`
	<section>
		<h2>Admins</h2>
		<ol>`)
//line views/stuff.qtpl:71
	for _, name := range admins {
//line views/stuff.qtpl:71
		qw422016.N().S(`
			<li><a href="/page/`)
//line views/stuff.qtpl:72
		qw422016.E().S(cfg.UserHypha)
//line views/stuff.qtpl:72
		qw422016.N().S(`/`)
//line views/stuff.qtpl:72
		qw422016.E().S(name)
//line views/stuff.qtpl:72
		qw422016.N().S(`">`)
//line views/stuff.qtpl:72
		qw422016.E().S(name)
//line views/stuff.qtpl:72
		qw422016.N().S(`</a></li>
		`)
//line views/stuff.qtpl:73
	}
//line views/stuff.qtpl:73
	qw422016.N().S(`</ol>
	</section>
	<section>
		<h2>Moderators</h2>
		<ol>`)
//line views/stuff.qtpl:77
	for _, name := range moderators {
//line views/stuff.qtpl:77
		qw422016.N().S(`
			<li><a href="/page/`)
//line views/stuff.qtpl:78
		qw422016.E().S(cfg.UserHypha)
//line views/stuff.qtpl:78
		qw422016.N().S(`/`)
//line views/stuff.qtpl:78
		qw422016.E().S(name)
//line views/stuff.qtpl:78
		qw422016.N().S(`">`)
//line views/stuff.qtpl:78
		qw422016.E().S(name)
//line views/stuff.qtpl:78
		qw422016.N().S(`</a></li>
		`)
//line views/stuff.qtpl:79
	}
//line views/stuff.qtpl:79
	qw422016.N().S(`</ol>
	</section>
	<section>
		<h2>Editors</h2>
		<ol>`)
//line views/stuff.qtpl:83
	for _, name := range editors {
//line views/stuff.qtpl:83
		qw422016.N().S(`
			<li><a href="/page/`)
//line views/stuff.qtpl:84
		qw422016.E().S(cfg.UserHypha)
//line views/stuff.qtpl:84
		qw422016.N().S(`/`)
//line views/stuff.qtpl:84
		qw422016.E().S(name)
//line views/stuff.qtpl:84
		qw422016.N().S(`">`)
//line views/stuff.qtpl:84
		qw422016.E().S(name)
//line views/stuff.qtpl:84
		qw422016.N().S(`</a></li>
		`)
//line views/stuff.qtpl:85
	}
//line views/stuff.qtpl:85
	qw422016.N().S(`</ol>
	</section>
</main>
</div>
`)
//line views/stuff.qtpl:89
}

//line views/stuff.qtpl:89
func WriteUserListHTML(qq422016 qtio422016.Writer) {
//line views/stuff.qtpl:89
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/stuff.qtpl:89
	StreamUserListHTML(qw422016)
//line views/stuff.qtpl:89
	qt422016.ReleaseWriter(qw422016)
//line views/stuff.qtpl:89
}

//line views/stuff.qtpl:89
func UserListHTML() string {
//line views/stuff.qtpl:89
	qb422016 := qt422016.AcquireByteBuffer()
//line views/stuff.qtpl:89
	WriteUserListHTML(qb422016)
//line views/stuff.qtpl:89
	qs422016 := string(qb422016.B)
//line views/stuff.qtpl:89
	qt422016.ReleaseByteBuffer(qb422016)
//line views/stuff.qtpl:89
	return qs422016
//line views/stuff.qtpl:89
}

//line views/stuff.qtpl:91
func StreamHyphaListHTML(qw422016 *qt422016.Writer) {
//line views/stuff.qtpl:91
	qw422016.N().S(`
<div class="layout">
<main class="main-width">
	<h1>List of hyphae</h1>
	<p>This wiki has `)
//line views/stuff.qtpl:95
	qw422016.N().D(hyphae.Count())
//line views/stuff.qtpl:95
	qw422016.N().S(` hyphae.</p>
	<ul class="hypha-list">
		`)
//line views/stuff.qtpl:97
	for h := range hyphae.YieldExistingHyphae() {
//line views/stuff.qtpl:97
		qw422016.N().S(`
		<li class="hypha-list__entry">
			<a class="hypha-list__link" href="/hypha/`)
//line views/stuff.qtpl:99
		qw422016.E().S(h.Name)
//line views/stuff.qtpl:99
		qw422016.N().S(`">`)
//line views/stuff.qtpl:99
		qw422016.E().S(util.BeautifulName(h.Name))
//line views/stuff.qtpl:99
		qw422016.N().S(`</a>
			`)
//line views/stuff.qtpl:100
		if h.BinaryPath != "" {
//line views/stuff.qtpl:100
			qw422016.N().S(`
			<span class="hypha-list__amnt-type">`)
//line views/stuff.qtpl:101
			qw422016.E().S(filepath.Ext(h.BinaryPath)[1:])
//line views/stuff.qtpl:101
			qw422016.N().S(`</span>
			`)
//line views/stuff.qtpl:102
		}
//line views/stuff.qtpl:102
		qw422016.N().S(`
		</li>
		`)
//line views/stuff.qtpl:104
	}
//line views/stuff.qtpl:104
	qw422016.N().S(`
	</ul>
</main>
</div>
`)
//line views/stuff.qtpl:108
}

//line views/stuff.qtpl:108
func WriteHyphaListHTML(qq422016 qtio422016.Writer) {
//line views/stuff.qtpl:108
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/stuff.qtpl:108
	StreamHyphaListHTML(qw422016)
//line views/stuff.qtpl:108
	qt422016.ReleaseWriter(qw422016)
//line views/stuff.qtpl:108
}

//line views/stuff.qtpl:108
func HyphaListHTML() string {
//line views/stuff.qtpl:108
	qb422016 := qt422016.AcquireByteBuffer()
//line views/stuff.qtpl:108
	WriteHyphaListHTML(qb422016)
//line views/stuff.qtpl:108
	qs422016 := string(qb422016.B)
//line views/stuff.qtpl:108
	qt422016.ReleaseByteBuffer(qb422016)
//line views/stuff.qtpl:108
	return qs422016
//line views/stuff.qtpl:108
}

//line views/stuff.qtpl:110
func StreamAboutHTML(qw422016 *qt422016.Writer) {
//line views/stuff.qtpl:110
	qw422016.N().S(`
<div class="layout">
<main class="main-width">
	<section>
		<h1>About `)
//line views/stuff.qtpl:114
	qw422016.E().S(cfg.WikiName)
//line views/stuff.qtpl:114
	qw422016.N().S(`</h1>
		<ul>
			<li><b><a href="https://mycorrhiza.lesarbr.es">Mycorrhiza Wiki</a> version:</b> 1.2.0 indev</li>
`)
//line views/stuff.qtpl:117
	if user.AuthUsed {
//line views/stuff.qtpl:117
		qw422016.N().S(`			<li><b>User count:</b> `)
//line views/stuff.qtpl:118
		qw422016.N().D(user.Count())
//line views/stuff.qtpl:118
		qw422016.N().S(`</li>
			<li><b>Home page:</b> <a href="/">`)
//line views/stuff.qtpl:119
		qw422016.E().S(cfg.HomeHypha)
//line views/stuff.qtpl:119
		qw422016.N().S(`</a></li>
			<li><b>Administrators:</b>`)
//line views/stuff.qtpl:120
		for i, username := range user.ListUsersWithGroup("admin") {
//line views/stuff.qtpl:121
			if i > 0 {
//line views/stuff.qtpl:121
				qw422016.N().S(`<span aria-hidden="true">, </span>
`)
//line views/stuff.qtpl:122
			}
//line views/stuff.qtpl:122
			qw422016.N().S(`				<a href="/page/`)
//line views/stuff.qtpl:123
			qw422016.E().S(cfg.UserHypha)
//line views/stuff.qtpl:123
			qw422016.N().S(`/`)
//line views/stuff.qtpl:123
			qw422016.E().S(username)
//line views/stuff.qtpl:123
			qw422016.N().S(`">`)
//line views/stuff.qtpl:123
			qw422016.E().S(username)
//line views/stuff.qtpl:123
			qw422016.N().S(`</a>`)
//line views/stuff.qtpl:123
		}
//line views/stuff.qtpl:123
		qw422016.N().S(`</li>
`)
//line views/stuff.qtpl:124
	} else {
//line views/stuff.qtpl:124
		qw422016.N().S(`			<li>This wiki does not use authorization</li>
`)
//line views/stuff.qtpl:126
	}
//line views/stuff.qtpl:126
	qw422016.N().S(`		</ul>
		<p>See <a href="/list">/list</a> for information about hyphae on this wiki.</p>
	</section>
</main>
</div>
`)
//line views/stuff.qtpl:132
}

//line views/stuff.qtpl:132
func WriteAboutHTML(qq422016 qtio422016.Writer) {
//line views/stuff.qtpl:132
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/stuff.qtpl:132
	StreamAboutHTML(qw422016)
//line views/stuff.qtpl:132
	qt422016.ReleaseWriter(qw422016)
//line views/stuff.qtpl:132
}

//line views/stuff.qtpl:132
func AboutHTML() string {
//line views/stuff.qtpl:132
	qb422016 := qt422016.AcquireByteBuffer()
//line views/stuff.qtpl:132
	WriteAboutHTML(qb422016)
//line views/stuff.qtpl:132
	qs422016 := string(qb422016.B)
//line views/stuff.qtpl:132
	qt422016.ReleaseByteBuffer(qb422016)
//line views/stuff.qtpl:132
	return qs422016
//line views/stuff.qtpl:132
}

//line views/stuff.qtpl:134
func StreamAdminPanelHTML(qw422016 *qt422016.Writer) {
//line views/stuff.qtpl:134
	qw422016.N().S(`
<div class="layout">
<main class="main-width">
	<h1>Administrative functions</h1>
	<section>
		<h2>Safe things</h2>
		<ul>
			<li><a href="/about">About this wiki<a></li>
			<li><a href="/user-list">User list</a></li>
			<li><a href="/update-header-links">Update header links</a></li>
		</ul>
	</section>
	<section>
		<h2>Dangerous things</h2>
		<form action="/admin/shutdown" method="POST" style="float:left">
			<fieldset>
				<legend>Shutdown wiki</legend>
				<input type="submit">
			</fieldset>
		</form>
		<form action="/reindex" method="GET" style="float:left">
			<fieldset>
				<legend>Reindex hyphae</legend>
				<input type="submit">
			</fieldset>
		</form>
		<form action="/admin/reindex-users" method="POST" style="float:left">
			<fieldset>
				<legend>Reindex users</legend>
				<input type="submit">
			</fieldset>
		</form>
	</section>
</main>
</div>
`)
//line views/stuff.qtpl:169
}

//line views/stuff.qtpl:169
func WriteAdminPanelHTML(qq422016 qtio422016.Writer) {
//line views/stuff.qtpl:169
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/stuff.qtpl:169
	StreamAdminPanelHTML(qw422016)
//line views/stuff.qtpl:169
	qt422016.ReleaseWriter(qw422016)
//line views/stuff.qtpl:169
}

//line views/stuff.qtpl:169
func AdminPanelHTML() string {
//line views/stuff.qtpl:169
	qb422016 := qt422016.AcquireByteBuffer()
//line views/stuff.qtpl:169
	WriteAdminPanelHTML(qb422016)
//line views/stuff.qtpl:169
	qs422016 := string(qb422016.B)
//line views/stuff.qtpl:169
	qt422016.ReleaseByteBuffer(qb422016)
//line views/stuff.qtpl:169
	return qs422016
//line views/stuff.qtpl:169
}

//line views/stuff.qtpl:171
func streamomnipresentScripts(qw422016 *qt422016.Writer) {
//line views/stuff.qtpl:171
	qw422016.N().S(`
`)
//line views/stuff.qtpl:172
	for _, scriptPath := range cfg.OmnipresentScripts {
//line views/stuff.qtpl:172
		qw422016.N().S(`
<script src="`)
//line views/stuff.qtpl:173
		qw422016.E().S(scriptPath)
//line views/stuff.qtpl:173
		qw422016.N().S(`"></script>
`)
//line views/stuff.qtpl:174
	}
//line views/stuff.qtpl:174
	qw422016.N().S(`
`)
//line views/stuff.qtpl:175
}

//line views/stuff.qtpl:175
func writeomnipresentScripts(qq422016 qtio422016.Writer) {
//line views/stuff.qtpl:175
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/stuff.qtpl:175
	streamomnipresentScripts(qw422016)
//line views/stuff.qtpl:175
	qt422016.ReleaseWriter(qw422016)
//line views/stuff.qtpl:175
}

//line views/stuff.qtpl:175
func omnipresentScripts() string {
//line views/stuff.qtpl:175
	qb422016 := qt422016.AcquireByteBuffer()
//line views/stuff.qtpl:175
	writeomnipresentScripts(qb422016)
//line views/stuff.qtpl:175
	qs422016 := string(qb422016.B)
//line views/stuff.qtpl:175
	qt422016.ReleaseByteBuffer(qb422016)
//line views/stuff.qtpl:175
	return qs422016
//line views/stuff.qtpl:175
}
